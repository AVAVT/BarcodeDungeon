//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity dungeonEntity { get { return GetGroup(GameMatcher.Dungeon).GetSingleEntity(); } }
    public DungeonComponent dungeon { get { return dungeonEntity.dungeon; } }
    public bool hasDungeon { get { return dungeonEntity != null; } }

    public GameEntity SetDungeon(System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, TileType> newMap, UnityEngine.Vector2Int newEntry, UnityEngine.Vector2Int newExit) {
        if (hasDungeon) {
            throw new Entitas.EntitasException("Could not set Dungeon!\n" + this + " already has an entity with DungeonComponent!",
                "You should check if the context already has a dungeonEntity before setting it or use context.ReplaceDungeon().");
        }
        var entity = CreateEntity();
        entity.AddDungeon(newMap, newEntry, newExit);
        return entity;
    }

    public void ReplaceDungeon(System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, TileType> newMap, UnityEngine.Vector2Int newEntry, UnityEngine.Vector2Int newExit) {
        var entity = dungeonEntity;
        if (entity == null) {
            entity = SetDungeon(newMap, newEntry, newExit);
        } else {
            entity.ReplaceDungeon(newMap, newEntry, newExit);
        }
    }

    public void RemoveDungeon() {
        dungeonEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public DungeonComponent dungeon { get { return (DungeonComponent)GetComponent(GameComponentsLookup.Dungeon); } }
    public bool hasDungeon { get { return HasComponent(GameComponentsLookup.Dungeon); } }

    public void AddDungeon(System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, TileType> newMap, UnityEngine.Vector2Int newEntry, UnityEngine.Vector2Int newExit) {
        var index = GameComponentsLookup.Dungeon;
        var component = CreateComponent<DungeonComponent>(index);
        component.map = newMap;
        component.entry = newEntry;
        component.exit = newExit;
        AddComponent(index, component);
    }

    public void ReplaceDungeon(System.Collections.Generic.Dictionary<UnityEngine.Vector2Int, TileType> newMap, UnityEngine.Vector2Int newEntry, UnityEngine.Vector2Int newExit) {
        var index = GameComponentsLookup.Dungeon;
        var component = CreateComponent<DungeonComponent>(index);
        component.map = newMap;
        component.entry = newEntry;
        component.exit = newExit;
        ReplaceComponent(index, component);
    }

    public void RemoveDungeon() {
        RemoveComponent(GameComponentsLookup.Dungeon);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDungeon;

    public static Entitas.IMatcher<GameEntity> Dungeon {
        get {
            if (_matcherDungeon == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Dungeon);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDungeon = matcher;
            }

            return _matcherDungeon;
        }
    }
}
