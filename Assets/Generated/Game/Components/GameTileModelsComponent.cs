//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity tileModelsEntity { get { return GetGroup(GameMatcher.TileModels).GetSingleEntity(); } }
    public TileModelsComponent tileModels { get { return tileModelsEntity.tileModels; } }
    public bool hasTileModels { get { return tileModelsEntity != null; } }

    public GameEntity SetTileModels(TileModels newValue) {
        if (hasTileModels) {
            throw new Entitas.EntitasException("Could not set TileModels!\n" + this + " already has an entity with TileModelsComponent!",
                "You should check if the context already has a tileModelsEntity before setting it or use context.ReplaceTileModels().");
        }
        var entity = CreateEntity();
        entity.AddTileModels(newValue);
        return entity;
    }

    public void ReplaceTileModels(TileModels newValue) {
        var entity = tileModelsEntity;
        if (entity == null) {
            entity = SetTileModels(newValue);
        } else {
            entity.ReplaceTileModels(newValue);
        }
    }

    public void RemoveTileModels() {
        tileModelsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TileModelsComponent tileModels { get { return (TileModelsComponent)GetComponent(GameComponentsLookup.TileModels); } }
    public bool hasTileModels { get { return HasComponent(GameComponentsLookup.TileModels); } }

    public void AddTileModels(TileModels newValue) {
        var index = GameComponentsLookup.TileModels;
        var component = CreateComponent<TileModelsComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceTileModels(TileModels newValue) {
        var index = GameComponentsLookup.TileModels;
        var component = CreateComponent<TileModelsComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveTileModels() {
        RemoveComponent(GameComponentsLookup.TileModels);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTileModels;

    public static Entitas.IMatcher<GameEntity> TileModels {
        get {
            if (_matcherTileModels == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TileModels);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTileModels = matcher;
            }

            return _matcherTileModels;
        }
    }
}
